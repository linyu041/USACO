/*
ID: linyu041
LANG: C++
TASK: milk2
*/
#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int a[1000005],ans=-1,tot,n,maxx=-1;
struct data
{
	int l,r;
}f[1000005];
inline bool cmp(data x,data y)
{
	return x.r<y.r;
}
int main()
{
	freopen("milk2.in","r",stdin);
	freopen("milk2.out","w",stdout);
	scanf("%d",&n);
	int x,y;
	for(int i=1;i<=n;i++)
	{
		scanf("%d%d",&x,&y);
		ans=max(y-x,ans);
		a[x]++;
		a[y]--;
	}
	int t=0,flag=0;
	for(int i=1;i<=1000001;i++)
	{
		t+=a[i];
		if(a[i]&&!flag)	flag=i;
		if(t==0&&flag)
		{
			ans=max(ans,i-flag);
			f[++tot].l=flag;
			f[tot].r=i;
			flag=0;
		}
	}
	flag=t=0;
	sort(f+1,f+1+tot,cmp);
	for(int i=2;i<=tot;i++)
	{
		//cout<<f[i].l<<" "<<f[i].r<<endl;
		if(f[i].l<=f[i-1].r)	continue;
		maxx=max(maxx,f[i].l-f[i-1].r);
	}
	flag=-1;
	for(int i=2;i<=tot;i++)
	{ 
		if(f[i].l>f[i-1].r)
		{
			if(flag!=-1)
			{
				ans=max(ans,f[i-1].r-f[flag].l+1);
			}
			flag=-1;
		}
		else
		{
			if(flag==-1)	flag=i;
		}
	}
	printf("%d %d\n",ans!=-1?ans:0,maxx!=-1?maxx:0);
	fclose(stdin);
	fclose(stdout);
	return 0;
} 
