/*
 ID: linyu041
 LANG: C++
 TASK: pprime
*/
#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<cmath>
#include<cstring>
using namespace std;
#define LOCAL
#define Inf 100000001
#define U(i,j,k) for(register int i=j;i<=k;++i)
#define D(i,j,k) for(register int i=j;i>=k;--i)
int a,b,t,s,e;
int h[100006];
inline bool PD(int x)
{
	if(x==0||x==1)	return false;
	int e=sqrt(x+0.5);
	U(i,2,e)
		if(x%i==0)	return false;
	return true;
}
void Create_Prime(int x)
{
	if(x==1)
	{
		h[++t]=2;
		h[++t]=3;
		h[++t]=5;
		h[++t]=7;
		if(b>=11)	h[++t]=11;
	}
	else	if(x==3)
	{
		U(i,0,9)
			U(j,0,9)
		{
			if(PD(i*100+j*10+i))	h[++t]=i*100+j*10+i;
		}
	}
	else	if(x==5)
	{
		U(i,0,9)
		{
			U(j,0,9)
			{
				U(k,0,9)
				{
					if(PD(i*10001+j*1010+k*100))	h[++t]=i*10001+j*1010+k*100;
				}
			}
		}
	}
	else	if(x==7)
	{
		U(i,0,9)
		{
			U(j,0,9)
			{
				U(k,0,9)
				{
					U(kk,0,9)
					{
						if(PD(i*1000001+j*100010+k*10100+kk*1000))	
							h[++t]=i*1000001+j*100010+k*10100+kk*1000;
					}
				}
			}
		}
	}
}
int main()
{
	#ifdef LOCAL
		freopen("pprime.in","r",stdin);
		freopen("pprime.out","w",stdout);
	#endif
	scanf("%d%d",&a,&b);
	if(a>=1)		s=1;
	if(a>=100)		s=3;
	if(a>=10000) 	s=5;
	if(a>=1000000)	s=7;
	for(int i=s;i<=9;i+=2)
		Create_Prime(i);
	U(i,1,t)
	{
		if(h[i]>=a&&h[i]<=b)	printf("%d\n",h[i]);
		if(h[i]>b)	break;
	}
	#ifdef LOCAL
		fclose(stdin);
		fclose(stdout);
	#endif
	return 0;
}
