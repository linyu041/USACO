/*
 ID: linyu041
 LANG: C++
 TASK: fence
*/
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<queue>
#include<cstring>
#include<string>
using namespace std;
#define File
#define U(i,j,k) for(register int i=j;i<=k;++i)
#define D(i,j,k) for(register int i=j;i>=k;--i)
int mp[505][505];
int f,s[500005],top,cnt[505];
void DDFS(int x)
{
	for(int i=1;i<=500;++i)
	{
		if(mp[x][i])
		{
			--mp[x][i];
			--mp[i][x];
			DDFS(i);
		}
	}
	s[++top]=x;
}
int main()
{
	#ifdef File
		freopen("fence.in","r",stdin);
		freopen("fence.out","w",stdout);
	#endif
	scanf("%d",&f);
	int x,y;
	U(i,1,f)
	{
		scanf("%d%d",&x,&y);
		++mp[x][y];
		++mp[y][x];
		++cnt[x];++cnt[y];
	}
	int bg=0;
	U(i,1,500)
	{
		if(cnt[i]&1)
		{
			bg=i;break;
		}
	}
	DDFS(bg==0?1:bg);
	D(i,top,1)
	{
		printf("%d\n",s[i]);
	}
	#ifdef File
		fclose(stdin);
		fclose(stdout);
	#endif
	return 0;
}
